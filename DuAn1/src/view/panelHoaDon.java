/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.HoaDon;
import model.HoaDonChiTiet;
import service.ChiTietSPService;
import service.HoaDonChiTietService;
import service.HoaDonService;
import service.KhachHangService;
import service.NhanVienService;
import service.PTTTService;

/**
 *
 * @author THANH
 */
public class panelHoaDon extends javax.swing.JPanel {

    private final ChiTietSPService chiTietSPService = new ChiTietSPService();
    private final HoaDonService hoaDonService = new HoaDonService();
    private final HoaDonChiTietService hoaDonChiTietService = new HoaDonChiTietService();
    private final NhanVienService nhanVienService = new NhanVienService();
    private final KhachHangService khachHangService = new KhachHangService();
    private final PTTTService pTTTService = new PTTTService();

    /**
     * Creates new form panelHoaDon
     */
    public panelHoaDon() {
        initComponents();
        loadTableHoaDon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlHoaDon = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblHoaDonChiTietBH = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        txtTimKiemHoaDon = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        cbbLocTrangThaiHD = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblHoaDonBanHang = new javax.swing.JTable();
        jLabel79 = new javax.swing.JLabel();
        jLabel80 = new javax.swing.JLabel();
        btnLocHoaDon = new javax.swing.JButton();
        txtNgayBD = new com.toedter.calendar.JDateChooser();
        txtNgayKT = new com.toedter.calendar.JDateChooser();
        btnClearHoaDon = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();

        pnlHoaDon.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblHoaDonChiTietBH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sản phẩm", "Sản phẩm", "Số lượng", "Giá"
            }
        ));
        jScrollPane3.setViewportView(tblHoaDonChiTietBH);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 970, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel23.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel23.setText("Tìm kiếm hóa đơn");

        txtTimKiemHoaDon.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtTimKiemHoaDonCaretUpdate(evt);
            }
        });
        txtTimKiemHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemHoaDonActionPerformed(evt);
            }
        });
        txtTimKiemHoaDon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemHoaDonKeyReleased(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel24.setText("Trang thái");

        cbbLocTrangThaiHD.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cbbLocTrangThaiHD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Đã thanh toán", "Chờ thanh toán", "Hóa đơn hủy" }));
        cbbLocTrangThaiHD.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbLocTrangThaiHDItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbbLocTrangThaiHD, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimKiemHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(94, 94, 94))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(txtTimKiemHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(cbbLocTrangThaiHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblHoaDonBanHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hóa đơn", "Ngày tạo", "Trạng Thái", "Nhân viên", "Khách hàng", "Tổng tiền"
            }
        ));
        tblHoaDonBanHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonBanHangMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblHoaDonBanHang);

        jLabel79.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel79.setText("Đến ngày");

        jLabel80.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel80.setText("Từ ngày");

        btnLocHoaDon.setBackground(new java.awt.Color(255, 153, 0));
        btnLocHoaDon.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnLocHoaDon.setForeground(new java.awt.Color(255, 255, 255));
        btnLocHoaDon.setText("Lọc");
        btnLocHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocHoaDonActionPerformed(evt);
            }
        });

        txtNgayBD.setDateFormatString("dd-MM-yyyy");

        txtNgayKT.setDateFormatString("dd-MM-yyyy");

        btnClearHoaDon.setBackground(new java.awt.Color(255, 153, 0));
        btnClearHoaDon.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnClearHoaDon.setForeground(new java.awt.Color(255, 255, 255));
        btnClearHoaDon.setText("Clear");
        btnClearHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearHoaDonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel80, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel79, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(txtNgayKT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtNgayBD, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(78, 78, 78)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnLocHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnClearHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel80)
                                .addGap(18, 18, 18))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnClearHoaDon)
                                    .addComponent(txtNgayBD, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnLocHoaDon)
                            .addComponent(txtNgayKT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                            .addComponent(jLabel79, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel25.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel25.setText("Hóa đơn");

        jLabel26.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel26.setText("Hóa đơn chi tiết");

        jLabel76.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel76.setForeground(new java.awt.Color(0, 153, 0));
        jLabel76.setText("Hóa Đơn");

        javax.swing.GroupLayout pnlHoaDonLayout = new javax.swing.GroupLayout(pnlHoaDon);
        pnlHoaDon.setLayout(pnlHoaDonLayout);
        pnlHoaDonLayout.setHorizontalGroup(
            pnlHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHoaDonLayout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(pnlHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlHoaDonLayout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addGap(305, 305, 305)
                        .addComponent(jLabel76))
                    .addComponent(jLabel26)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(93, Short.MAX_VALUE))
        );
        pnlHoaDonLayout.setVerticalGroup(
            pnlHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHoaDonLayout.createSequentialGroup()
                .addGroup(pnlHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlHoaDonLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHoaDonLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel76)
                        .addGap(27, 27, 27)))
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1177, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(pnlHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 724, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(pnlHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 724, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtTimKiemHoaDonCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtTimKiemHoaDonCaretUpdate
//        listHD = hds.SearchHD(txtTimKiemHoaDon.getText());
//        showDataHD(listHD);
    }//GEN-LAST:event_txtTimKiemHoaDonCaretUpdate

    private void tblHoaDonBanHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonBanHangMouseClicked

        int selectedRow = tblHoaDonBanHang.getSelectedRow();

        String maHoaDon = (String) tblHoaDonBanHang.getValueAt(selectedRow, 0);

        // Sử dụng thông tin hóa đơn để truy vấn chi tiết hóa đơn từ cơ sở dữ liệu
        List<HoaDonChiTiet> chiTietList = hoaDonChiTietService.getCTHoaDonByMa(maHoaDon);

        // Hiển thị thông tin chi tiết hóa đơn lên bảng hoặc giao diện người dùng
        DefaultTableModel chiTietModel = (DefaultTableModel) tblHoaDonChiTietBH.getModel();
        chiTietModel.setRowCount(0);
        double tongTien = 0;
        for (HoaDonChiTiet hoaDonChiTiet : chiTietList) {
            chiTietModel.addRow(new Object[]{
                hoaDonChiTiet.getSanPham().getMaSP(),
                hoaDonChiTiet.getSanPham(),
                hoaDonChiTiet.getSoLuong(),
                hoaDonChiTiet.getDonGia()
            });
            tongTien += hoaDonChiTiet.getDonGia();
        }


    }//GEN-LAST:event_tblHoaDonBanHangMouseClicked

    private void btnLocHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocHoaDonActionPerformed
        if (checkNgay()) {
            Date a = txtNgayBD.getDate();
            Date b = txtNgayKT.getDate();
            if (b == null) {
                DefaultTableModel model = new DefaultTableModel();
                model = (DefaultTableModel) tblHoaDonBanHang.getModel();

                model.setRowCount(0);
                List<HoaDon> list = hoaDonService.searchNgayBD(a);
                for (HoaDon hoaDon : list) {
                    model.addRow(new Object[]{
                        //                hoaDon.getId(),
                        hoaDon.getMaHD(),
                        hoaDon.getNgayTao(),
                        hoaDon.getTrangThai(),
                        hoaDon.getNv().getHoTen(),
                        hoaDon.getKh().getTen(),
                        hoaDon.getTongTien()
                    });
                }
            } else if (a == null) {
                DefaultTableModel model = new DefaultTableModel();
                model = (DefaultTableModel) tblHoaDonBanHang.getModel();

                model.setRowCount(0);
                List<HoaDon> list = hoaDonService.searchNgayKT(b);
                for (HoaDon hoaDon : list) {
                    model.addRow(new Object[]{
                        //                hoaDon.getId(),
                        hoaDon.getMaHD(),
                        hoaDon.getNgayTao(),
                        hoaDon.getTrangThai(),
                        hoaDon.getNv().getHoTen(),
                        hoaDon.getKh().getTen(),
                        hoaDon.getTongTien()
                    });
                }
            } else {
                DefaultTableModel model = new DefaultTableModel();
                model = (DefaultTableModel) tblHoaDonBanHang.getModel();

                model.setRowCount(0);
                List<HoaDon> list = hoaDonService.searchBdVaKt(a, b);
                for (HoaDon hoaDon : list) {
                    model.addRow(new Object[]{
                        //                hoaDon.getId(),
                        hoaDon.getMaHD(),
                        hoaDon.getNgayTao(),
                        hoaDon.getTrangThai(),
                        hoaDon.getNv().getHoTen(),
                        hoaDon.getKh().getTen(),
                        hoaDon.getTongTien()
                    });
                }
            }
        }


    }//GEN-LAST:event_btnLocHoaDonActionPerformed

    private void txtTimKiemHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemHoaDonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemHoaDonActionPerformed

    private void txtTimKiemHoaDonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemHoaDonKeyReleased
        // TODO add your handling code here:
        String a = "%" + txtTimKiemHoaDon.getText() + "%";

        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) tblHoaDonBanHang.getModel();

        model.setRowCount(0);
        List<HoaDon> list = hoaDonService.search(a);
        for (HoaDon hoaDon : list) {
            model.addRow(new Object[]{
                //                hoaDon.getId(),
                hoaDon.getMaHD(),
                hoaDon.getNgayTao(),
                hoaDon.getTrangThai(),
                hoaDon.getNv().getHoTen(),
                hoaDon.getKh().getTen(),
                hoaDon.getTongTien()
            });
        }
    }//GEN-LAST:event_txtTimKiemHoaDonKeyReleased

    private void btnClearHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearHoaDonActionPerformed
        // TODO add your handling code here:
        txtTimKiemHoaDon.setText("");
        cbbLocTrangThaiHD.setSelectedIndex(0);
        txtNgayBD.setDate(null);
        txtNgayKT.setDate(null);
        loadTableHoaDon();
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) tblHoaDonChiTietBH.getModel();
        model.setRowCount(0);
    }//GEN-LAST:event_btnClearHoaDonActionPerformed

    private void cbbLocTrangThaiHDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbLocTrangThaiHDItemStateChanged
        // TODO add your handling code here:
        String trangThai = (String) cbbLocTrangThaiHD.getSelectedItem();
        DefaultTableModel model = (DefaultTableModel) tblHoaDonBanHang.getModel();

        // Kiểm tra nếu trạng thái không được chọn (null hoặc rỗng)
        if (trangThai.equals("")) {
            // Nếu không có trạng thái được chọn, hiển thị toàn bộ danh sách hóa đơn
            model.setRowCount(0);
            List<HoaDon> list = hoaDonService.getAll();

            if (!list.isEmpty()) {
                for (HoaDon hoaDon : list) {
                    model.addRow(new Object[]{
                        hoaDon.getMaHD(),
                        hoaDon.getNgayTao(),
                        hoaDon.getTrangThai(),
                        hoaDon.getNv().getHoTen(),
                        hoaDon.getKh().getTen(),
                        hoaDon.getTongTien()
                    });
                }
            }
        } else {
            // Nếu có trạng thái được chọn, hiển thị danh sách hóa đơn phù hợp
            model.setRowCount(0);
            List<HoaDon> list = hoaDonService.getSearchByTT(trangThai);

            if (!list.isEmpty()) {
                for (HoaDon hoaDon : list) {
                    model.addRow(new Object[]{
                        hoaDon.getMaHD(),
                        hoaDon.getNgayTao(),
                        hoaDon.getTrangThai(),
                        hoaDon.getNv().getHoTen(),
                        hoaDon.getKh().getTen(),
                        hoaDon.getTongTien()
                    });
                }
            }
        }
    }//GEN-LAST:event_cbbLocTrangThaiHDItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClearHoaDon;
    private javax.swing.JButton btnLocHoaDon;
    private javax.swing.JComboBox<String> cbbLocTrangThaiHD;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JPanel pnlHoaDon;
    private javax.swing.JTable tblHoaDonBanHang;
    private javax.swing.JTable tblHoaDonChiTietBH;
    private com.toedter.calendar.JDateChooser txtNgayBD;
    private com.toedter.calendar.JDateChooser txtNgayKT;
    private javax.swing.JTextField txtTimKiemHoaDon;
    // End of variables declaration//GEN-END:variables

    private void loadTableHoaDon() {
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) tblHoaDonBanHang.getModel();

        model.setRowCount(0);
        List<HoaDon> list = hoaDonService.getAll();
        for (HoaDon hoaDon : list) {
            model.addRow(new Object[]{
                //                hoaDon.getId(),
                hoaDon.getMaHD(),
                hoaDon.getNgayTao(),
                hoaDon.getTrangThai(),
                hoaDon.getNv().getHoTen(),
                hoaDon.getKh().getTen(),
                hoaDon.getTongTien()
            });
        }
    }

    private void loadTableHoaDonChiTiet() {
        DefaultTableModel model = new DefaultTableModel();
        model = (DefaultTableModel) tblHoaDonChiTietBH.getModel();

        model.setRowCount(0);
        List<HoaDonChiTiet> list = hoaDonChiTietService.getAll();
        for (HoaDonChiTiet hoaDonChiTiet : list) {
            model.addRow(new Object[]{
                hoaDonChiTiet.getSanPham().getMaSP(),
                hoaDonChiTiet.getSanPham(),
                hoaDonChiTiet.getSoLuong(),
                hoaDonChiTiet.getDonGia()
            });
        }
    }

//    private boolean checkNgay(){
//        if(txtTimKiemNgayBD.getText().isBlank() && txtTimKiemNgayKT.getText().isBlank()){
//            JOptionPane.showMessageDialog(this, "Ít nhất xin nhập nhày bắt đầu hoặc ngày kết thúc ");
//            return false;
//        }else if(txtTimKiemNgayKT.getText().isBlank()){
//            if (!txtTimKiemNgayBD.getText().matches("^(\\d{4}[-/]\\d{2}[-/]\\d{2})|(\\d{2}[-/]\\d{2}[-/]\\d{4})$")) {
//                JOptionPane.showMessageDialog(this, "Xin hãy nhập đúng định dạng yyyy-mm-dd, mm-dd-yyyy, yyyy/mm/dd, mm/dd/yyyy");
//                return false;
//            }
//        }else if (txtTimKiemNgayBD.getText().isBlank()) {
//            if (!txtTimKiemNgayKT.getText().matches("^(\\d{4}[-/]\\d{2}[-/]\\d{2})|(\\d{2}[-/]\\d{2}[-/]\\d{4})$")) {
//                JOptionPane.showMessageDialog(this, "Xin hãy nhập đúng định dạng yyyy-mm-dd, mm-dd-yyyy, yyyy/mm/dd, mm/dd/yyyy");
//                return false;
//            }
//        }else{
//            if (!txtTimKiemNgayBD.getText().matches("^(\\d{4}[-/]\\d{2}[-/]\\d{2})|(\\d{2}[-/]\\d{2}[-/]\\d{4})$")) {
//                JOptionPane.showMessageDialog(this, "Xin hãy nhập đúng định dạng yyyy-mm-dd, mm-dd-yyyy, yyyy/mm/dd, mm/dd/yyyy");
//                return false;
//            }if (!txtTimKiemNgayKT.getText().matches("^(\\d{4}[-/]\\d{2}[-/]\\d{2})|(\\d{2}[-/]\\d{2}[-/]\\d{4})$")) {
//                JOptionPane.showMessageDialog(this, "Xin hãy nhập đúng định dạng yyyy-mm-dd, mm-dd-yyyy, yyyy/mm/dd, mm/dd/yyyy");
//                return false;
//            }
//        }
//        
//        return true;
//    }
    private boolean checkNgay() {
        Date d = txtNgayBD.getDate();
        Date t = txtNgayKT.getDate();
        if (d == null && t == null) {
            JOptionPane.showMessageDialog(this, "Ít nhất xin nhập(chọn) ngày bắt đầu hoặc ngày kết thúc đúng kiểu dữu liệu");
            return false;
        }

        return true;
    }
}
